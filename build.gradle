apply plugin: 'groovy'
apply plugin: 'kotlin'
apply plugin: 'java'
apply from: 'maven-push.gradle'

buildscript {
    repositories {

        mavenCentral()

//        maven {
//
//            url = "https://oss.sonatype.org/content/repositories/snapshots"
//        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }


    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61'
    }

}

repositories {


    mavenCentral()


}


dependencies {
    compile 'commons-io:commons-io:2.4'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.5.4'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.springframework:spring-context-support:4.3.10.RELEASE'
    compile 'com.google.inject:guice:4.0'
    compile 'org.jetbrains.kotlin:kotlin-maven-allopen:1.3.61'

}


group = 'com.nexl-js'
version = '1.0.0'
description = 'Spring Nexl Js'
sourceCompatibility = '1.8'


ext.ReporterType = org.jlleitschuh.gradle.ktlint.reporter.ReporterType
apply plugin: "org.jlleitschuh.gradle.ktlint"
ktlint {
    version = "0.34.2"
    debug = true
    verbose = true
    android = false
    outputToConsole = true
    reporters = [ReporterType.PLAIN, ReporterType.CHECKSTYLE]
    ignoreFailures = true
    enableExperimentalRules = true
    additionalEditorconfigFile = file("/some/additional/.editorconfig")
    kotlinScriptAdditionalPaths {
        include fileTree("scripts/")
    }
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
    }
}
buildscript {

    repositories {
        mavenCentral()
//        maven {
//            url = "https://oss.sonatype.org/content/repositories/snapshots"
//        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jlleitschuh.gradle:ktlint-gradle:8.2.0"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0"
    }
}
allprojects {
    /* no need configuration */
}
subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"
}
/* task clean(type: Delete) {
    delete rootProject.buildDir
}*/